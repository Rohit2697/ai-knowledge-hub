import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
import Navbar from '@/components/Navbar';
import { cookies } from 'next/headers';
import { verifyToken } from '@/lib/utils';
import { decodedToken } from '@/lib/utils';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};
interface NavBarProps {
  name: string;
  email: string;
  userId: string;
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const cookieStore = await cookies()
  const token = cookieStore.get('token')?.value
  let isAuthenticated = false

  let decoded: NavBarProps | undefined = undefined

  if (token) {
    isAuthenticated = verifyToken(token)
    decoded = decodedToken(token) as { email: string, name: string, userId: string }
  }

  //token ? await verifyToken() : false

  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >

        {isAuthenticated && decoded && decoded.name && <Navbar {...decoded} />}
        <div className="min-h-screen bg-gradient-to-b from-violet-50 to-white">
          <main className="max-w-5xl mx-auto py-12 px-4">{children}</main></div>

      </body>
    </html>
  );
}
